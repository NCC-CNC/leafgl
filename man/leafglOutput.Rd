% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glify-shiny.R
\name{leafglOutput}
\alias{leafglOutput}
\title{Use leafgl in shiny}
\usage{
leafglOutput(outputId, width = "100\%", height = 400)
}
\arguments{
\item{outputId}{output variable to read from}

\item{width}{the width and height of the map (see
\code{\link[htmlwidgets]{shinyWidgetOutput}})}

\item{height}{the width and height of the map (see
\code{\link[htmlwidgets]{shinyWidgetOutput}})}
}
\value{
A UI for rendering leafgl
}
\description{
Use leafgl in shiny
}
\examples{
if (interactive()) {
library(leaflet)
library(leafgl)
library(sf)

n = 1e4
df1 = data.frame(id = 1:n,
    x = rnorm(n, 10, 3),
    y = rnorm(n, 49, 1.8))
pts = st_as_sf(df1, coords = c("x", "y"), crs = 4326)

m = leaflet() \%>\%
 addProviderTiles(provider = providers$CartoDB.DarkMatter) \%>\%
 addGlPoints(data = pts, group = "pts") \%>\%
 setView(lng = 10.5, lat = 49.5, zoom = 6) \%>\%
 addLayersControl(overlayGroups = "pts")

ui <- fluidPage(
    leafglOutput("mymap")
)

server <- function(input, output, session) {
    output$mymap <- renderLeaflet(m)
}

shinyApp(ui, server)
}

}
